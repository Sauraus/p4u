#!/usr/bin/env bash
#
# Description: deletes a p4 changelist completely.
#              removes its shelve, reverts the files
#              and deletes the changelist.
# Author: Arnon Zilca
#

set -e

# get script dir path
SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

source "${SCRIPT_PATH}/p4-help-functions"

usage() {
    echo "$(basename $0) -- removes shelve, reverts files and finally deletes changelist." >&2
    echo "usage: $(basename $0) [options] changelist[s]" >&2
    echo "  -f   force delete (don't as questions)" >&2
}

if [[ "$1" == "-h" ]]; then
    usage
    exit 0
fi

if [[ "$1" == "-f" ]]; then
    FORCE=1
    shift
fi

if [[ $# -gt 0 ]]; then
    CHANGELISTS="$@"
else
    CHANGELISTS="$(p4-pick-changelist "delete")"    # sourced in p4-help-functions
fi

p4-fix-hostname "${client}" "${FORCE}"   # sourced in p4-help-functions

for CHANGELIST in ${CHANGELISTS}; do
    #make sure changelist exist.
    p4 describe -s ${CHANGELIST} > /dev/null # set -e will exit automatically if fails

    client=$(p4 change -o ${CHANGELIST} | awk '/^Client:/{print $2}')

    p4 -c ${client} shelve -d -c ${CHANGELIST} 2> /dev/null || true
    files_to_revert=$(p4 -c "${client}" opened 2> /dev/null | grep "change ${CHANGELIST}" | sed "s/#.*//g") # sed returns true even for empty answer
    if [[ -n "${files_to_revert}" ]]; then
        p4 -c ${client} revert ${files_to_revert}
    fi

    fixes=$(p4 fixes -c ${CHANGELIST} | cut -f 1 -d ' ')
    if [[ -n ${fixes} ]]; then
        p4 fix -d -c ${CHANGELIST} ${fixes}
    fi
    p4 -c ${client} change -d ${CHANGELIST}
done
